(window.webpackJsonp=window.webpackJsonp||[]).push([[148],{633:function(s,a,t){"use strict";t.r(a);var n=t(4),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"redis基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis基础"}},[s._v("#")]),s._v(" Redis基础")]),s._v(" "),t("h2",{attrs:{id:"redis简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis简介"}},[s._v("#")]),s._v(" Redis简介")]),s._v(" "),t("p",[s._v("NoSQL")]),s._v(" "),t("ul",[t("li",[s._v("可扩容，可伸缩")]),s._v(" "),t("li",[s._v("大数据量下高性能")]),s._v(" "),t("li",[s._v("灵活的数据模型")]),s._v(" "),t("li",[s._v("高可用")])]),s._v(" "),t("p",[s._v("常见的NoSQL数据库：Redis memcache HBase MongoDB")]),s._v(" "),t("p",[s._v("概念: Redis (REmote DIctionary Server)是用C语言开发的一一个开源的高性能键值对(key-value) 数据库。")]),s._v(" "),t("p",[s._v("特征:")]),s._v(" "),t("ol",[t("li",[s._v("数据间没有必然的关联关系")]),s._v(" "),t("li",[s._v("内部采用单线程机制进行工作")]),s._v(" "),t("li",[s._v("高性能。 官方提供测试数据，50个并发执行100000个请求,读的速度是110000次/s,写的速度是81000次/s。")]),s._v(" "),t("li",[s._v("多数据类型支持\n●字符串类型string\n●列表类型list\n●散列类型hash\n●集合类型set\n●有序集合类型sorted set")]),s._v(" "),t("li",[s._v("持久化支持。可以进行数据灾难恢复")])]),s._v(" "),t("p",[s._v("Redis的应用场景")]),s._v(" "),t("ul",[t("li",[s._v("为热点数据加速查询(主要场景) ,如热点商品、热点新闻、热点资讯、推广类等高访问量信息等")]),s._v(" "),t("li",[s._v("任务队列,如秒杀、抢购、购票排队等")]),s._v(" "),t("li",[s._v("即时信息查询，如各位排行榜、各类网站访问统计、公交到站信息、在线人数信息(聊天室、网站)、设备信号等")]),s._v(" "),t("li",[s._v("时效性信息控制，如验证码控制、投票控制等")]),s._v(" "),t("li",[s._v("分布式数据共享,如分布式集群架构中的session分离")]),s._v(" "),t("li",[s._v("消息队列")]),s._v(" "),t("li",[s._v("分布式锁")])]),s._v(" "),t("h2",{attrs:{id:"redis数据存储类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis数据存储类型"}},[s._v("#")]),s._v(" Redis数据存储类型")]),s._v(" "),t("p",[s._v("Redis自身是一个Map，其中所有的数据都是采用key:value的形式存储，key永远都是字符串，我们讨论的数据存储类型是value部分的类型。")]),s._v(" "),t("h3",{attrs:{id:"string类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#string类型"}},[s._v("#")]),s._v(" string类型")]),s._v(" "),t("p",[s._v("单个数据，最简单也是最常用的数据存储类型，一个存储空间保存了一个数据，如果字符串以整数的形式展示则可以作为数字操作使用。")]),s._v(" "),t("p",[s._v("String类型的基本操作：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("添加/修改数据\nset key value\n获取数据\nget key\n删除数据\ndel key（成功返回1失败返回0）\n添加修改多个数据\nmset key1 value1 key2 value2 ...\n获取多个数据\nmget key1 key2 ...\n获取value字符串长度\nstrlen key\n追加信息到原始信息后，不存在则新建\nappend key value\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("单数据操作set和多数据操作mset该如何选择：\n数据操作经历了三个过程：客户端发送指令->服务器执行指令->服务器返回结果。这三个步骤都是需要时间的，没有明确规则说明什么时候要用mset，但如果使用多指令的时候要考虑如果一次发送执行并返回的时间消耗非常大的话对于单线程的Redis是不太适用的，所以要找到最佳的分割点。")]),s._v(" "),t("p",[s._v("String类型的扩展操作：")]),s._v(" "),t("p",[t("strong",[s._v("场景：")]),s._v(" 大型企业级应用中分库分表是基本操作，使用多张表存储同类型数据，但主键id必须保证统一性，不能重复。使用Redis能控制id，为数据库表主键提供生成策略，保障主键的唯一性。String在Redis内部存储默认是字符串，遇到增减操作时转换为数值型进行计算。如果不能转换或超过了Long.MAX_VALUE将报错。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 设置数值数据增加指定范围的值\nincr key //key+1\nincrby key increment //值增加指定的increment\nincrbyfloat key increment //增加小数\n\n# 设置数值数据减少指定范围的值\ndecr key\ndecr key increment\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[t("strong",[s._v("场景：")]),s._v(" 投票规定每天只能投一票、热门商品在榜首不超过3小时，验证码五分钟内有效。redis控制数据的生命周期，通过数据是否失效控制业务行为，适用于所有具有时效性限定控制的操作。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("setex key seconds value\npsetex key milliseconds value\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("String类数据未获取到返回(nil)，数据最大存储量为512MB，一般不会也没有必要用到这么大的热点数据。")]),s._v(" "),t("p",[t("strong",[s._v("场景：")]),s._v(" 应用于限时按次结算的服务控制\n一分钟内允许最多调用10次，超过10次则拒绝服务，每隔1分钟重置调用计数。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("setex uid:0001 60 0 //设置该用户1min内已经调用次数为0\nget uid:0001 //用户发起调用时先检查次数，达到10则拒绝服务，如果为nil则再执行上一条语句\nincr uid:0001 //成功调用服务后计数+1\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("strong",[s._v("场景：")]),s._v(" Redis应用于各种结构型和非结构型高热度数据访问加速，例如为大V用户设定粉丝数、推文数等信息，这时可以这样存储并设定定时刷新策略：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("//以数据库中用户的主键和属性值作为key\nset user:id:123:fans 12345646\nset user:id:123:blogs 789\n\n//以json格式存储用户的整个热点信息\nset user:id:123 {fans:12345646, blogs:789}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("热点数据key的命名惯例一般为："),t("code",[s._v("表名:主键名:主键值:字段名")]),s._v("，前者增减更方便，后者需要读取后更改部分再重新写入。")]),s._v(" "),t("h3",{attrs:{id:"hash类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash类型"}},[s._v("#")]),s._v(" hash类型")]),s._v(" "),t("p",[s._v("在上一个场景中，如果使用json同时又有频繁的更新操作会显得笨重，分成多个key-value的话key中有很多重复的部分，并且从逻辑上这些都是同一个用户的信息。我们现在可以这样划分：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("                    fans    12345646\nuser:id:123\n                    blogs   789\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("将"),t("code",[s._v("user:id:123")]),s._v("作为key，右侧的value作为一个完整的存储空间，那么右侧又是一个key-value结构，这就是Redis的hash类型，不过hash里的key我们称作field。")]),s._v(" "),t("p",[s._v("hash可以对一系列存储的数据进行编组（例如存储对象的各属性），方便管理。其底层如果field数量较少会优化为类数组结构，如果较多使用HashMap结构。")]),s._v(" "),t("p",[s._v("hash类型的基本操作：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 添加或修改数据\nhset key field value\n# 如果不存在数据才添加否则什么都不做\nhsetnx key field value\n# 获取数据\nhget key field\nhgetall key\n# 删除数据\nhdel key field1 field2 ...\n\n# 添加或修改多个数据\nhmset key field1 value1 field2 value2 ...\n# 获取多个数据\nhmget key field1 field2 ...\n# 获取哈希表中字段数量\nhlen key\n# 获取哈希表中是否存在指定字段\nhexists key field\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("p",[s._v("hash类型的扩展操作：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 获取哈希表中所有的字段名\nhkeys key\n#获取哈希表中所有的字段值\nhvals key\n\n# 设定指定字段的数值数据增加指定范围的值\nhincrby key field increment //hincrbyfloat增加小数 \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("hash的value只能存储字符串，不存在嵌套现象，每个hash可以存储最多2^32-1个键值对。hash类型很接近对象的数据存储形式并可以灵活添加和删除对象属性，但其初衷不是为了存储大量对象而设计的不可以滥用。hgetall操作如果内部field过多速度就会降低，可能成为数据访问的瓶颈。")]),s._v(" "),t("h3",{attrs:{id:"list类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#list类型"}},[s._v("#")]),s._v(" list类型")]),s._v(" "),t("p",[s._v("list存储多个数据，并对数据进入存储空间的顺序进行区分，底层使用双向链表实现。由于是双向链表所以从两边都可以插入数据，可以模拟栈和队列的操作。")]),s._v(" "),t("p",[s._v("list类型数据的基本操作：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 添加或修改数据\nlpush key value1 value2 ...\nrpush key value1 value2 ...\n\n# 获取数据\nlrange key start stop //从左边数第start位置到第stop位置的所有数据 例如0 2查看前三个数据 0 -1第0个到倒数第一个\nlindex key index //查看第index个元素是\nllen key //查看list长度\n\n# 获取并移除数据\nlpop key //左侧出1，左进左出等同于栈，右进左出等同于队列\nrpop key\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("list数据类型的扩展操作：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 规定时间内从若干个list获取并移除数据，任意一个获取到就返回（阻塞式数据获取）\nblpop key1 [key2 ...] timeout\nbrpop key1 [key2 ...] timeout\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("list可能为空，这时在时间超限之前都会阻塞，一旦有别的客户端向list内插入数据则pop该数据。可以从多个list中等数据，这就对应着任务队列的实现操作。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 移除指定位置的数据\nlrem key count value //从左往右删掉count个值为value的数据（list中可能有相同数据）\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("list保存数据是string类型的，单个list最多存2^32-1个元素。list具有索引概念，但一般以栈和队列的形式进行操作。队列模型可以解决多路信息汇总合并的问题，栈模型可以解决最新消息的问题。")]),s._v(" "),t("h3",{attrs:{id:"set类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set类型"}},[s._v("#")]),s._v(" set类型")]),s._v(" "),t("p",[s._v("list底层采用双向链表，查询效率并不高，我们现在需要存储大量数据并在查询方面提供更高的效率。\n这时就有了set类型，set类型与hash存储结构完全相同，仅存储键不存储值（nil），并且不允许重复。")]),s._v(" "),t("p",[s._v("set类型数据的基本操作：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 添加数据\nsadd key member1 member2 ...\n# 获取全部数据\nsmembers key\n#删除数据\nsrem key member1 member2 ...\n# 获取集合数据总量\nscard key\n# 判断集合中是否包含指定数据\nsismember key member\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("set类型的扩展操作（可以用于随机推荐信息）：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 随机获取集合中指定数量的数据\nsrandmember key [account]\n# 随机获得并移除集合中的指定数量的数据\nspop key [account]\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("set类型的扩展操作（两个集合的交并差集）：")]),s._v(" "),t("p",[s._v("可用于深度关联搜索，得到共同好友，独立访问量统计，黑白名单等等。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 求两个集合的交、并、差集\nsinter keyl [key2] ...\nsunion keyl [key2] ...\nsdiff keyl [key2] ... //这里是前面集合减去后面的集合\n# 求两个集合的交、并、差集并存储到指定集合中\nsinterstore destination key1 [key2]\nsunionstore destination keyl [key2]\nsdiffstore destination keyl [ key2]\n# 将指定数据从原始集合中移动到目标集合中\nsmove source destination member\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("redis可以提供基础数据（smembers）也可以提供校验结果（sismember），但后者是把校验的业务逻辑放到存储这边来做了，有一定的耦合，不推荐。")]),s._v(" "),t("h3",{attrs:{id:"sorted-set-zset-类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sorted-set-zset-类型"}},[s._v("#")]),s._v(" sorted_set（zset）类型")]),s._v(" "),t("p",[s._v("list能保存数据的插入顺序，但不能按照元素的自然顺序进行排序。我们需要保存可排序的数据，sorted_set应运而生。")]),s._v(" "),t("p",[s._v("sorted_set在set存储结构的基础上添加了可排序的字段score，score字段不用来存储数据而仅用来排序。")]),s._v(" "),t("p",[s._v("sorted_set类型数据的基本操作：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 添加数据\nzadd key score1 member1 score2 member2 ...\n# 获取排序后指定序号范围数据\nzrange key start stop [withscores] //查看指定范围的数据（升序），如果加上withscores会连同分数一并显示\nzrevrange key start stop [withscores] //查看降序排序的数据\n# 删除数据\nzrem key member1 member2 ...\n\n# 按照score范围获取数据\nzrangebyscore key min max [withscores] [LIMIT offset count] //limit限制返回查询到的结果数量\nzrevrangebyscore key max min [withscores] [LIMIT offset count]\n\n# 按排序后的顺序删除数据\nzremrangebyrank key start stop\n# 按score删除顺序\nzremrangebyscore key min max\n\n# 获取集合数据量\nzcard key\nzcount key min max\n# 集合交并操作（合并时默认对相同的元素的score相加，可以用过AGGREGATE来控制使用最大值或最小值）\nzinterstore destination numkeys(要合并的集合数量) key1 key2 ...[AGGREGATE SUM|MIN|MAX]\nzunionstore destination numkeys key1 key2 ...\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br")])]),t("p",[s._v("sorted_set类型数据的扩展操作：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 获取数据对应的索引（排名）\nzrank key member //从小到大排第几，得到0表示最小，第1小\nzrevrank key member //从大到小排第几，得到0表示最大，第1大\n\n# score值获取与修改\nzscore key member\nzincrby key increment member\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("score保存的数据存储空间为64位，可以为整数也可以为双精度double值，但double值可能丢失精度导致比较不准确要慎重使用。")]),s._v(" "),t("h2",{attrs:{id:"redis通用指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis通用指令"}},[s._v("#")]),s._v(" Redis通用指令")]),s._v(" "),t("h3",{attrs:{id:"key的操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#key的操作"}},[s._v("#")]),s._v(" key的操作")]),s._v(" "),t("p",[s._v("key一定是string类型，常用的操作有：")]),s._v(" "),t("ul",[t("li",[s._v("对于key自身状态的相关操作，如删除、判定存在、获取对应的数据类型；")]),s._v(" "),t("li",[s._v("对key有效性控制相关的操作，如有效期设定、判定是否有效、有效状态的切换等；")]),s._v(" "),t("li",[s._v("对于key的快速查询操作，如指定策略查询key。")])]),s._v(" "),t("p",[s._v("状态操作：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 删除指定key\ndel key\n# 获取key是否存在\nexists key\n# 获取key对应的value类型\ntype key\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("时效性控制：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 为指定key设置有效期\nexpire key seconds\npexpire key milliseconds\nexpireat key timestamp\npexpireat key milliseconds-timestamp\n\n# 获取key的有效时间\nttl key //如果key不存在返回-2，如果未设置有效期返回-1，否则返回剩余的有效时长\npttl key\n\n#切换key从时效性转为永久性\npersist key\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("扩展操作（查询模式）")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 查询符合pattern的key\nkeys pattern //如keys *表示查询所有的key\n//*匹配任意数量的任意符号，？匹配任意单个字符，[]匹配括号内的任一单个字符\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("其他操作：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 为key改名\nrename key newkey //如果newkey已经存在则会覆盖\nrenamenx key newkey //如果newkey不存在才能改名成功\n\n# 为list/set/sorted_set中所有key排序\nsort key //返回排序的结果，但不会修改原数据顺序\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"数据库的通用指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库的通用指令"}},[s._v("#")]),s._v(" 数据库的通用指令")]),s._v(" "),t("p",[s._v("key是由开发者定义的，在使用过程中，伴随着操作数据量的增加会出现大量的数据以及对应的key，数据不区分种类混杂在一起，极易出现重复或冲突。Redis为此提供了解决方案，每个服务提供有16个数据库0~15，每个数据库之间相互独立。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 切换数据库\nselect index //index从0~15\n\n# 其他操作\nquit\nping\necho message\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("默认在0号数据库，我们只能获得当前数据库中的key，切换到其他数据库后就不能再获取了。这时可以对数据进行移动。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("move key db //移动操作必须保证目标数据库没有同名的key，否则移动失败\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("数据清除：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 查看当前数据库key数量\ndbsize \n# 清除当前数据库\nflushdb\n# 清除所有数据库的所有数据\nflushall\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"jedis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jedis"}},[s._v("#")]),s._v(" Jedis")]),s._v(" "),t("p",[s._v("Jedis、SpringData Redis、Lettuce都是Java语言连接操作Redis的工具，使用Jedis的步骤很简单，分为三步：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("junit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("redis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("clients"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jedis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Test")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("testJedis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1.连接Redis")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jedis")]),s._v(" jedis "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jedis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"127.0.0.1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2.操作Redis")]),s._v("\n        jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Tom"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3.关闭连接")]),s._v("\n        jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("其中，jedis对象的操作方法与redis提供的指令完全吻合。以list和hash类型为例简单测试一下：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Test")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("testList")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("lpush")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"list1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpush")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"list1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"x"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" list1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("lrange")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"list1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" list1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("llen")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"list1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Test")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("testHash")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hset")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hash1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"f1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"v1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hset")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hash1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"f2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"v2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hset")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hash1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"f3"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"v3"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Map")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" hash1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hgetAll")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hash1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    hash1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("v"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('":"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("v"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hlen")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hash1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("h3",{attrs:{id:"案例模拟"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#案例模拟"}},[s._v("#")]),s._v(" 案例模拟")]),s._v(" "),t("p",[s._v("假设作为服务提供方我们为A、B、C三个用户提供服务，每分钟限制A用户调用10次、B用户调用30次、C用户不作限制。创建一个多线程类，模拟用户调用。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("redis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("clients"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jedis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("redis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("clients"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exceptions"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisDataException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Service")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maxCall"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Service")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maxCall"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("maxCall "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" maxCall"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//控制单元")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jedis")]),s._v(" jedis "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jedis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"127.0.0.1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"compid:"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//判断该值是否存在")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setex")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"compid:"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MAX_VALUE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" maxCall "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),s._v(" val "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("incr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"compid:"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MAX_VALUE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" maxCall"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("doBusiness")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisDataException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"单位时间内使用次数达到上限"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//业务操作")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("doBusiness")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),s._v(" val"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"用户"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"执行第"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("val"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"次业务操作！"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyThread")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Service")]),s._v(" service"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maxCall"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        service "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Service")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("maxCall"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            service"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("300L")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Main")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyThread")]),s._v(" mt1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        mt1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyThread")]),s._v(" mt2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        mt2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br")])]),t("p",[s._v("后续还可以对业务控制方案进行改造，例如增加判断用户是否不限次数，是则直接调用业务。另外，调用次数的限制不会写死到程序中，我们可以写入配置文件或者将不同用户的等级信息、限制调用次数存入Redis中。")]),s._v(" "),t("h3",{attrs:{id:"jedis连接池工具类开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jedis连接池工具类开发"}},[s._v("#")]),s._v(" Jedis连接池工具类开发")]),s._v(" "),t("p",[s._v("上面我们每次在控制单元中都手动创建管理Jedis对象，利用Jedis提供的JedisPool我们可以方便地创建连接池。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("redis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("clients"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jedis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("redis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("clients"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisPool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("redis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("clients"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisPoolConfig")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ResourceBundle")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisUtils")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisPool")]),s._v(" jp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ResourceBundle")]),s._v(" rb "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ResourceBundle")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBundle")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Jedis连接池核心配置")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisPoolConfig")]),s._v(" jpc "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisPoolConfig")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//最大连接数")]),s._v("\n        jpc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setMaxTotal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("rb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis.maxTotal"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//活动连接数")]),s._v("\n        jpc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setMaxIdle")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("rb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis.maxIdle"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" host "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" rb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis.host"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" port "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("rb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis.port"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        jp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisPool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jpc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("host"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("port"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jedis")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getJedis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" jp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getResource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br")])]),t("p",[s._v("这时在业务中调用控制逻辑时就可以用JedisUtils.getJedis()来从连接池中取出连接了。")]),s._v(" "),t("h1",{attrs:{id:"redis高级"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis高级"}},[s._v("#")]),s._v(" Redis高级")]),s._v(" "),t("h2",{attrs:{id:"linux下安装配置redis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux下安装配置redis"}},[s._v("#")]),s._v(" Linux下安装配置Redis")]),s._v(" "),t("p",[s._v("以CentOS为例，主要有以下几个步骤：")]),s._v(" "),t("ul",[t("li",[s._v("下载安装包： "),t("code",[s._v("wget http://download.redis.io/releases/redis-X.X.X.tar.gz")])]),s._v(" "),t("li",[s._v("解压缩 "),t("code",[s._v("tar -xvf 文件名.tar.gz")])]),s._v(" "),t("li",[s._v("编译安装 "),t("code",[s._v("make install")]),s._v(" "),t("ul",[t("li",[s._v("如果下载的是6.0以上版本的Redis可能需要安装8版本的gcc、gcc-c++、gdb工具链"),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("yum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" centos-release-scl scl-utils-build\nyum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y devtoolset-8-toolchain\nscl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" devtoolset-8 "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\ngcc --version\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])])])])]),s._v(" "),t("p",[s._v("之后我们进入到src目录下就能看到安装好的redis-server和redis-cli等可执行文件了。")]),s._v(" "),t("p",[s._v("如果要启动多个Redis服务，需要在启动时指定端口："),t("code",[s._v("redis-server --port 6380")]),s._v("，\n这时客户端连接时也要指明端口："),t("code",[s._v("redis-cli -p 6380")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"redis配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis配置"}},[s._v("#")]),s._v(" Redis配置")]),s._v(" "),t("p",[s._v("企业开发中不可能每次都指定端口来启动服务，redis根目录下提供了默认配置文件redis.conf，我们可以查看它并过滤掉注释行和空行：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" redis.conf  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -v "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -v "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^$"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将这些内容追加到一个新的配置文件中以便我们进行修改")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" redis.conf  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -v "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -v "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^$"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" redis-6379.conf\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("配置文件中注释掉我们暂时不用的内容，只保留下面四条：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('port 6379\ndaemonize yes # 是否以守护进程的方式启动\nlogfile "6379.log" # 配置日志文件名\ndir /root/redis-6.0.6/data # 生成的日志文件的位置\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("现在在启动服务时可以通过"),t("code",[s._v("redis-server redis-6379.conf")]),s._v("来加载配置，由于配置了以守护进程的方式启动，所以来确认一下进程是否在运行：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@centos-vm redis-6.0.6"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ps -ef | grep redis-")]),s._v("\nroot      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8979")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(":20 ?        00:00:00 redis-server *:6379\nroot      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8985")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7948")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(":20 pts/0    00:00:00 "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" --color"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("auto redis-\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("能够看到该进程id为8979，并且通过redis-cli连接测试成功。使用"),t("code",[s._v("kill -s 9 8979")]),s._v("来杀死该进程。")]),s._v(" "),t("p",[s._v("我们在Redis根目录下创建一个conf目录，将配置了不同端口的配置文件放到该目录下，之后就可以用这些配置文件启动多个redis服务进程了。")]),s._v(" "),t("h2",{attrs:{id:"redis持久化方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis持久化方案"}},[s._v("#")]),s._v(" Redis持久化方案")]),s._v(" "),t("p",[s._v("持久化是利用永久性存储介质将数据进行保存，在特定时间将保存的数据进行恢复的工作机制。")]),s._v(" "),t("p",[s._v("持久化过程保存的形式有：")]),s._v(" "),t("ul",[t("li",[s._v("数据快照的形式：将当前数据状态进行保存，存储数据结果，存储格式简单，关注点在数据")]),s._v(" "),t("li",[s._v("数据操作的过程（日志）：存储操作过程，存储格式复杂，关注点在数据的操作过程。")])]),s._v(" "),t("p",[s._v("Redis中这两种形式都存在，快照形式称为RDB，日志形式称为AOF")]),s._v(" "),t("h3",{attrs:{id:"rdb"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rdb"}},[s._v("#")]),s._v(" RDB")]),s._v(" "),t("h4",{attrs:{id:"手动命令-立即执行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#手动命令-立即执行"}},[s._v("#")]),s._v(" 手动命令 立即执行")]),s._v(" "),t("p",[s._v("RDB由Redis操作者手动执行，可以用于随时保存数据。命令为：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("save\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("在前面配置Redis的启动配置时，我们曾经配置过"),t("code",[s._v("dir /root/redis-6.0.6/data")]),s._v("，在Redis中存入一定数据后，我们执行save指令，这时在该目录下就会保存一个名为"),t("code",[s._v("dump.rdb")]),s._v("的二进制快照文件，更多save指令相关的配置有：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 设置本地数据库文件名，默认为dump.rdb，通常设置为dump-端口号.rdb\ndbfilename dump-6379.rdb\n\n# 设置存储至本地时是否压缩，默认为yes采用LZF压缩，设置为no可以节约CPU时间，但文件会变得非常大\nrdbcompression yes\n\n# 设置是否进行rdb文件格式校验，默认为yes，在读写过程中均会进行校验，设置为no能节约10%时间消耗但有一定数据损坏风险\nrdbchecksum yes\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("Redis在下次启动时会自动加载dump文件中的数据。")]),s._v(" "),t("h4",{attrs:{id:"手动命令-后台执行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#手动命令-后台执行"}},[s._v("#")]),s._v(" 手动命令 后台执行")]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",[s._v("由于redis是单线程执行任务队列中的任务，save指令会阻塞当前redis服务器，直到当前RDB过程完成为止，数据量过大时有可能造成长时间的阻塞，线上环境不建议使用。")])]),s._v(" "),t("p",[s._v("针对单线程执行RDB在面对过大数据量时可能造成的效率低的问题，可以使用后台执行的方式。仍由redis操作者发起指令，但redis服务器可能不会立即执行，而是控制在合理的时间执行。后台保存操作的指令为：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("bgsave\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("bgsave的原理在于，服务器收到该指令后向客户端返回一条“Background saving started”消息，之后会抽空调用Linux的fork函数生成子进程来创建rdb文件，创建结束后向父进程返回消息，能在日志文件中看到该记录。建议所有涉及RDB的操作都采用bgsave的方式，放弃使用save命令。bgsave的一条相关配置为"),t("code",[s._v("stop-writes-on-bgsave-error yes")]),s._v("，默认为yes，如果后台存储中出现错误则停止保存操作。")]),s._v(" "),t("h4",{attrs:{id:"自动执行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动执行"}},[s._v("#")]),s._v(" 自动执行")]),s._v(" "),t("p",[s._v("人工反复多次执行保存指令是不现实的，Redis服务器可以基于设定的条件自动发起指令。该条件在配置文件中进行配置：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 每隔second秒的时间内如果key的变化量达到changes，则进行持久化\nsave second changes\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("该配置启动后执行的是bgsave操作，要根据实际业务情况进行设置，频度过高或过低都会出现性能问题，seconds和change通常具有互补对应关系，通常不要设置成包含性关系。并且不进行数据比对，例如设定时间内反复执行set key1 value1这样的操作达到设定次数时也会执行持久化。")]),s._v(" "),t("h4",{attrs:{id:"rdb的特殊启动形式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rdb的特殊启动形式"}},[s._v("#")]),s._v(" RDB的特殊启动形式")]),s._v(" "),t("ul",[t("li",[s._v("主从复制中的全量复制会启动RDB")]),s._v(" "),t("li",[s._v("服务器运行过程中使用"),t("code",[s._v("debug reload")]),s._v("指令重启会启动RDB")]),s._v(" "),t("li",[s._v("关闭服务器时指定保存数据"),t("code",[s._v("shutdown save")]),s._v("会启动RDB")])]),s._v(" "),t("h4",{attrs:{id:"rdb优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rdb优缺点"}},[s._v("#")]),s._v(" RDB优缺点")]),s._v(" "),t("p",[s._v("优点：")]),s._v(" "),t("ul",[t("li",[s._v("RDB是一个紧凑压缩的二进制文件，存储效率较高")]),s._v(" "),t("li",[s._v("RDB是某个时间点的数据快照，适合用于数据备份、全量复制、灾难恢复等场景。")]),s._v(" "),t("li",[s._v("其数据恢复速度要比AOF快很多")])]),s._v(" "),t("p",[s._v("缺点：")]),s._v(" "),t("ul",[t("li",[s._v("RDB无法做到实时持久化，具有较大可能性丢失部分数据")]),s._v(" "),t("li",[s._v("bgsave指令每次要执行fork操作创建子进程，要牺牲一些性能")]),s._v(" "),t("li",[s._v("不同版本的Redis的RDB文件格式可能出现不兼容的现象。")]),s._v(" "),t("li",[s._v("数据量大时IO性能较低，每次读写都是全部数据")])]),s._v(" "),t("h3",{attrs:{id:"aof"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aof"}},[s._v("#")]),s._v(" AOF")]),s._v(" "),t("p",[s._v("由于RDB存在以上缺点，这时AOF（append only file）就是一种互补的解决方案。AOF仅记录部分数据，具体来说记录的不是数据而是操作过程，以独立日志的方式对所有写操作进行记录，排除丢失数据额风险，重启时再重新执行AOF文件中的命令达到数据恢复的目的。AOF主要解决的时数据持久化的实时性，已经是Redis持久化的主流方式。")]),s._v(" "),t("h4",{attrs:{id:"aof写数据的过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aof写数据的过程"}},[s._v("#")]),s._v(" AOF写数据的过程")]),s._v(" "),t("p",[s._v("在操作者发送写指令后，Redis服务器接收到这条指令，并没有马上记录，而是放到AOF写命令刷新缓存区中，到了一定阶段后再把这些指令写入到aof文件中。AOF写数据有三种策略（"),t("code",[s._v("appendfsync")]),s._v("）：")]),s._v(" "),t("ul",[t("li",[s._v("always（每次），每次操作均同步到AOF文件中，数据零误差，性能较低")]),s._v(" "),t("li",[s._v("everysec（每秒），每秒同步到AOF文件，准确性较高、性能较高")]),s._v(" "),t("li",[s._v("no（系统控制），整体过程不可控")])]),s._v(" "),t("p",[s._v("AOF配置：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 是否开启AOF，默认为no\nappendonly yes|no\n# AOF写数据策略\nappendfsync always|everysec|no\n# 自定义AOF持久化文件名，默认为appendonly.aof，建议配置为applendonly-端口号.aof\nappendfilename filename\n# 持久化文件保存路径，和RDB文件保持一致即可\ndir path\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h4",{attrs:{id:"aof重写"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aof重写"}},[s._v("#")]),s._v(" AOF重写")]),s._v(" "),t("p",[s._v("随着命令不断写入AOF，文件会越来越大，为此Redis引入了AOF重写机制压缩文件体积。AOF重写是将Redis进程内的数据转化成写命令同步更新到AOF文件的过程，简单来说就是将对同一个数据的若干条命令执行结果转化成最终结果数据对应的指令进行记录。")]),s._v(" "),t("p",[s._v("AOF重写可以降低磁盘占用量，提高持久化写和恢复的效率。重写有如下规则：")]),s._v(" "),t("ul",[t("li",[s._v("超时数据不再写入文件")]),s._v(" "),t("li",[s._v("忽略无效指令，使用进程内数据直接生成，只保留最终数据的写入命令")]),s._v(" "),t("li",[s._v("对同一数据的多条写命令合并为一条命令，为防止数据量过大造成缓冲区溢出，对于list每条指令最多写入64个元素")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 手动重写指令\nbgrewriteaof\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("手动发送"),t("code",[s._v("bgrewriteaof")]),s._v("指令时返回一条"),t("code",[s._v("Background append only file rewriting started")]),s._v("消息，类似bgsave会创建一个子进程来重写aof文件，子进程执行完后返回消息给父进程。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 自动重写配置\nauto-aof-rewrite-min-size size # 默认值比较大32/64M，如果aof_current_size大于该值则触发重写\nauto-aof-rewrite-percentage pecentage # 当aof_current_size减去aof_base_size再除以base size即变化百分比达到阈值时触发重写\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"aof与aof重写的工作原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aof与aof重写的工作原理"}},[s._v("#")]),s._v(" AOF与AOF重写的工作原理")]),s._v(" "),t("p",[s._v("配置开启了AOF后，主进程会fork子进程，如果策略为always则每条指令都写入AOF文件，否则都会先将指令写入AOF缓存区和AOF重写缓存区中，再写入AOF文件。此时如果手动发送"),t("code",[s._v("bgrewriteaof")]),s._v("则会fork子进程来把AOF重写缓存区中的数据合并替换原来的AOF文件。")]),s._v(" "),t("h3",{attrs:{id:"rdb与aof比较"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rdb与aof比较"}},[s._v("#")]),s._v(" RDB与AOF比较")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("持久化方式")]),s._v(" "),t("th",[s._v("RDB")]),s._v(" "),t("th",[s._v("AOF")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("占用空间")]),s._v(" "),t("td",[s._v("小，数据级压缩")]),s._v(" "),t("td",[s._v("大，指令级重写")])]),s._v(" "),t("tr",[t("td",[s._v("存储速度")]),s._v(" "),t("td",[s._v("慢")]),s._v(" "),t("td",[s._v("快")])]),s._v(" "),t("tr",[t("td",[s._v("恢复速度")]),s._v(" "),t("td",[s._v("快")]),s._v(" "),t("td",[s._v("慢")])]),s._v(" "),t("tr",[t("td",[s._v("数据安全性")]),s._v(" "),t("td",[s._v("可能丢失部分数据")]),s._v(" "),t("td",[s._v("依据策略决定")])]),s._v(" "),t("tr",[t("td",[s._v("资源消耗")]),s._v(" "),t("td",[s._v("高、重量级")]),s._v(" "),t("td",[s._v("低、轻量级")])]),s._v(" "),t("tr",[t("td",[s._v("启动优先级")]),s._v(" "),t("td",[s._v("低")]),s._v(" "),t("td",[s._v("高")])])])]),s._v(" "),t("p",[s._v("如何选择？")]),s._v(" "),t("ul",[t("li",[s._v("如果数据非常敏感，不能接受数分钟以内的数据丢失，建议使用默认的AOF持久化方案。")]),s._v(" "),t("li",[s._v("如果数据呈现阶段有效性，能接受短期内的数据丢失，建议使用RDB持久化方案。")]),s._v(" "),t("li",[s._v("灾难恢复选用RDB")]),s._v(" "),t("li",[s._v("双保险策略，同时启用，Redis重启后优先使用AOF来恢复数据，减少丢失数据的量。")])]),s._v(" "),t("h3",{attrs:{id:"持久化应用场景分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#持久化应用场景分析"}},[s._v("#")]),s._v(" 持久化应用场景分析")]),s._v(" "),t("p",[s._v("场景1：redis用于控制数据库表主键id，为数据库表主键提供生成策略，保障数据库表主键的唯一性。不建议进行持久化，而是应该从数据库中读最大的id+1再存入使用。")]),s._v(" "),t("p",[s._v("场景2：redis应用于各种结构型和非结构型热点数据的访问加速。不建议进行持久化。")]),s._v(" "),t("p",[s._v("场景3：redis应用于购物车的设计。不建议进行持久化。")]),s._v(" "),t("p",[s._v("场景4：redis应用于抢购，限购类、限量发放优惠卷、激活码等业务的数据存储设计。由于这些快速改变的数据不一定来得及写入到数据库中，所以建议持久化，并且少量的误差是可以容忍的。")]),s._v(" "),t("p",[s._v("场景5：redis应用于具有操作先后顺序的数据控制，如果数据量不是特别大建议持久化，因为也可能不存入数据库。")]),s._v(" "),t("p",[s._v("场景6：redis应用于最新消息展示，可能选择用专门的消息队列产品了。")]),s._v(" "),t("p",[s._v("场景7：redis应用于同类信息的关联搜索，二度关联搜索，深度关联搜索。不需要持久化，直接读数据库即可。")]),s._v(" "),t("p",[s._v("场景8：redis应用于基于黑名单与白名单设定的服务控制，如果黑名单是短期策略则存建议做持久化，白名单和部分黑名单是长期策略，不做redis持久化。")]),s._v(" "),t("p",[s._v("场景9：redis应用于计数器组合排序功能对应的排名，需要持久化，因为存数据库里可能没意义。")]),s._v(" "),t("p",[s._v("场景10：redis应用于即时任务/消息队列执行管理")]),s._v(" "),t("p",[s._v("场景11：redis应用于单位时间内按次结算的服务控制，一般不持久化，因为往往时效性已过。")]),s._v(" "),t("h2",{attrs:{id:"redis事务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis事务"}},[s._v("#")]),s._v(" Redis事务")]),s._v(" "),t("h3",{attrs:{id:"事务的定义与使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务的定义与使用"}},[s._v("#")]),s._v(" 事务的定义与使用")]),s._v(" "),t("p",[s._v("Redis的事务和关系型数据库的事务定义类似，但也有一定区别。Redis执行指令的过程中，可能出现多条连续执行的指令被干扰、打断、插队的情况。")]),s._v(" "),t("p",[s._v("Redis事务就是一个命令执行队列，将一系列预定义命令包装成一个整体。当执行时，一次性按顺序执行、中间不会被打断或者干扰。")]),s._v(" "),t("p",[s._v("在关系型数据库中我们分别使用"),t("code",[s._v("START TRANSACTION")]),s._v("和"),t("code",[s._v("COMMIT")]),s._v("来开启和提交事务，在Redis中，我们使用"),t("code",[s._v("multi")]),s._v("和"),t("code",[s._v("exec")]),s._v("指令来说明后面多条指令属于一个事务并执行这个事务。加入事务的命令暂时进入到任务队列中并没有立即执行，只有执行exec命令时才开始执行。类似于关系型数据库中的"),t("code",[s._v("ROLLBACK")]),s._v("，Redis中也可以使用"),t("code",[s._v("discard")]),s._v("来终止当前事务的定义。")]),s._v(" "),t("p",[s._v("Redis服务器在接收到指令后，首先判断本身是否在事务状态：")]),s._v(" "),t("ul",[t("li",[s._v("不在事务状态，识别命令，如果是普通指令则执行并返回结果，如果是multi指令则创建队列返回OK")]),s._v(" "),t("li",[s._v("在事务状态，识别命令，普通命令则加入命令执行队列，exec指令则执行事务并返回事务中每条指令的执行结果并销毁队列，discard指令则直接销毁队列，exec和discard都会退出事务状态。")])]),s._v(" "),t("p",[s._v("注意事项：")]),s._v(" "),t("ul",[t("li",[s._v("如果定义事务中包含的命令存在语法错误，则会直接导致该事务被discard。")]),s._v(" "),t("li",[s._v("如果定义的指令语法正确但无法正确执行（例如对list进行incr操作），则能够被正确运行的命令会执行并返回结果，但运行错误的命令返回错误信息不会对数据产生影响。正真开发中要测试、避免这种问题。真的出现误操作后的一种下策是记录操作前数据的状态，之后再手动回滚。")])]),s._v(" "),t("h3",{attrs:{id:"监视锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#监视锁"}},[s._v("#")]),s._v(" 监视锁")]),s._v(" "),t("p",[s._v("业务场景：多个客户端可能同时操作同一组数据，数据一旦被修改则不应继续操作。这时需要在操作之前锁定要操作的数据，一旦发生变化则终止当前操作。")]),s._v(" "),t("p",[s._v("解决方案：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 对key添加监视锁，在执行exec前如果key发生变化则终止事务执行\nwatch key1 [key2 ...] \n# 取消对所有key的监视\nunwatch\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("监视锁必须在开启事务之前添加，之后在本客户端的首个事务执行前，如果key对应的值发生变化，则该事务执行被终止，返回nil。后面的事务不受影响。")]),s._v(" "),t("h3",{attrs:{id:"分布式锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁"}},[s._v("#")]),s._v(" 分布式锁")]),s._v(" "),t("p",[s._v("场景：有100件商品，如果有更多的人要同时抢购该商品，如何避免不发生超卖？")]),s._v(" "),t("p",[s._v("解决方案：利用setnx命令的返回值特征，有值则返回设置失败，无值则返回设置成功。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 使用setnx设置一个公共锁，操作完毕后使用del释放锁\nsetnx lock-key value\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("客户端修改数据前现要获得锁，如果setnx失败则要排队等待。当然这种方案是一种设计概念，没有真正对目标数据上锁，依赖约定的规范来保证安全，具有一定风险。")]),s._v(" "),t("h3",{attrs:{id:"死锁解决方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#死锁解决方案"}},[s._v("#")]),s._v(" 死锁解决方案")]),s._v(" "),t("p",[s._v("在上面的方案中，如果一个客户端加锁后出现宕机或忘记释放锁，则其它客户端都不能获得锁。所以解锁的操作不能仅依赖用户控制，而是要给出系统级别的保底处理方案，即在获取锁之后立刻为锁设定时限，到一定时间仍不释放则释放锁。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("expire lock-key second\npexpire lock-key millisecond\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("由于操作通常都是毫秒、微秒级别，所以锁定时间不宜过大，具体时间需要进行业务测试后确认，一般推荐设定为"),t("code",[s._v("业务的最大耗时*1.2+平均网络延时*1.1")]),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"redis删除策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis删除策略"}},[s._v("#")]),s._v(" Redis删除策略")]),s._v(" "),t("p",[s._v("早些时候我们学习Redis通用指令时知道可以用expire设置过期时间，用ttl指令查看数据的状态，如果大于等于0则是有时效性的数据，如果为-1则是永久有效的数据，如果为-2则是已经过期的数据或者是被删除的数据或者是未定义的数据。")]),s._v(" "),t("p",[s._v("我们考虑一个问题：数据过期以后，会立即在内存中被删除吗？")]),s._v(" "),t("p",[s._v("CPU执行指令时由于删除操作（内存释放）的优先级往往没有get set操作优先级高，在内存充足的情况下可能不会立刻删除过期数据。Redis有三种删除策略："),t("strong",[s._v("定时删除、惰性删除、定期删除")]),s._v("。\n删除策略的目标时在内存占用和CPU占用之间寻找一种平衡。")]),s._v(" "),t("p",[s._v("Redis的0~15号数据库中都有一块expires空间（hash结构），当我们设置数据的有效期后，会再该空间中存入数据的地址和过期时间。")]),s._v(" "),t("h3",{attrs:{id:"定时删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定时删除"}},[s._v("#")]),s._v(" 定时删除")]),s._v(" "),t("p",[s._v("创建一个定时器，当key设置过期时间并达到过期时间时，由定时器任务立即执行对键的删除操作。优点在于省内存，缺点是无论CPU负载量如何都会占用CPU，会影响redis服务器的响应时间和指令吞吐量。")]),s._v(" "),t("h3",{attrs:{id:"惰性删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#惰性删除"}},[s._v("#")]),s._v(" 惰性删除")]),s._v(" "),t("p",[s._v("数据到达过期时间后不做处理，等下次访问该数据时如果未过期则返回数据，如果发现已过期则删除并返回不存在。这种方式是将所有的获取数据操作和expireIfNeeded()函数绑定，只要获取数组则之前都作检查。该策略节约CPU性能，缺点是内存压力很大。")]),s._v(" "),t("h3",{attrs:{id:"定期删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定期删除"}},[s._v("#")]),s._v(" 定期删除")]),s._v(" "),t("p",[s._v("这是一种折中方案，Redis服务器初始化时，读取配置server.hz的值，默认为10。该值用于控制对服务器进行定时轮询的频度，每秒钟执行server.hz次serverCron()，进而通过databaseCron()对每一个db中的expires空间进行轮询，进而通过activeExpireCycle()对单个expires[i]进行检测，每次执行250ms/server.hz。随机挑选出W个key检测，如果检测到W中超过25%的key都过期被删除了，那么对expires[i]中剩余的key循环进行该操作。W的值在配置中由"),t("code",[s._v("ACTIVE_EXPIRE_CYCLE_LOOKUPS_PER_LOOP")]),s._v("配置。")]),s._v(" "),t("p",[s._v("定期删除周期性地轮询Redis库中的时效性数据，采用随机抽取的策略，利用过期数据占比的方式控制删除频度。CPU性能占用设置有峰值，检测频度可定义，内存压力不是很大，长期占用内存的冷数据会被持续清理。")]),s._v(" "),t("h2",{attrs:{id:"逐出策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逐出策略"}},[s._v("#")]),s._v(" 逐出策略")]),s._v(" "),t("p",[s._v("Redis在执行每个命令前，会调用freeMemoryIfNeeded()检测内存是否充足，如果不满足新加入数据的最低存储要求，则要临时删除一些数据为当前指令清理存储空间。清理策略的数据称为逐出算法（也称淘汰算法）。逐出数据的过程并不一定能百分百成功，当对所有数据尝试完毕之后如果不能达到内存清理的要求，将出现错误信息。")]),s._v(" "),t("p",[s._v("与逐出策略相关的配置：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 最大可使用内存 占用物理内存的比例，默认值为0表示不限制，根据需求设定\nmaxmemory \n# 每次选取待删除的数据个数，选取数据时如果全库扫描会导致严重的性能消耗\nmaxmemory-samples\n# 删除策略\nmaxmemory-policy policy\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("删除策略的选择：")]),s._v(" "),t("ul",[t("li",[s._v("检测易失数据（可能会过期的数据集server.db[i].expires）\n"),t("ul",[t("li",[s._v("volatile-lru：挑选最近最少使用的数据（建议使用此项）")]),s._v(" "),t("li",[s._v("volatile-lfu：挑选最近使用次数最少的数据淘汰")]),s._v(" "),t("li",[s._v("volatile-ttl：挑选将要过期的数据淘汰")]),s._v(" "),t("li",[s._v("volatile-random：任意选择数据淘汰")])])]),s._v(" "),t("li",[s._v("检测全库数据（所有数据集server.db[i].dict）\n"),t("ul",[t("li",[s._v("allkeys-lru")]),s._v(" "),t("li",[s._v("allkeys-lfu")]),s._v(" "),t("li",[s._v("allkeys-random")])])]),s._v(" "),t("li",[s._v("放弃驱逐数据\n"),t("ul",[t("li",[s._v("no-enviction，Redis4.0以后的默认策略，可能引发OOM（OutOfMemory）")])])])]),s._v(" "),t("h2",{attrs:{id:"redis基础配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis基础配置"}},[s._v("#")]),s._v(" Redis基础配置")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 设置服务器以守护进程的方式运行\ndaemonize yes|no\n# 绑定主机地址，只有从绑定的地址才能访问服务器\nbind 127.0.0.1\n# 设置服务器端口号\nport 6379\n# 设置数据库数量\ndatabases 16\n\n# 设置日志的级别，默认为verbose，debug信息量更丰富，线上场景用notice即可，写日志要耗CPU性能\nloglevel debug|verbose|notice|warning\n\n# 同一时间内最大客户端连接数，默认0表示无限制。达到上限是Redis会关闭连接\nmaxclients 0\n# 客户端闲置等待最大时长。关闭该功能则设置为0\ntimeout 300\n\n# 多服务器快捷配置，导入并加载指定的配置文件信息，用于快速创建公共配置较多的实例配置文件\ninclude /path/server-port.conf //相对路径和绝对路径均可\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("h2",{attrs:{id:"redis高级数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis高级数据类型"}},[s._v("#")]),s._v(" Redis高级数据类型")]),s._v(" "),t("p",[s._v("所谓的高级数据类型其实是为了解决单一的业务问题而存在的。并不复杂，内容也比较简单")]),s._v(" "),t("h3",{attrs:{id:"bitmaps"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bitmaps"}},[s._v("#")]),s._v(" Bitmaps")]),s._v(" "),t("p",[s._v("Redis中Bitmaps并不是一种全新的数据结构，就是基于string来的，只不过操作方式不同了。在一些编程语言中，我们想要用变量保存一些简单的二元状态值的话能操作的最小单位是字节，而从二进制层面看，1字节可以存储8位状态。基于这种思想我们在存储状态值时能更节省空间，只不过写入数据时需要计算出要修改哪一位，属于用时间换空间。")]),s._v(" "),t("p",[s._v("Bitmaps类型的基础操作：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 获取指定key对应偏移量上的bit值\ngetbit key offset\n# 设置指定key对应偏移量上的bit值，value只能是0或1\nsetbit key offset value\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("注意，如果没有设置过key或者没有设置过key上的某偏移量的话使用getbit得到的都是0；在setbit时，如果偏移量很大则Redis需要花很多时间把前面的为全部显式置为0，所以如果使用场景计数很大建议统一减去计数的最小值再setbit。")]),s._v(" "),t("p",[s._v("Bitmaps类型的扩展操作：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 统计指定key中1的数量\nbitcount key [start end]\n\n# 对指定key按位进行交、并、非、异或操作，并将结果保存到destKey中\nbitop and|or|not|xor destKey key1 [key2 ...]\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("使用场景：每天统计若干编好号的文件资源是否被访问过，一个月下来把每天的统计结果进行或操作就能知道哪些资源一个月内都没有人访问，可以删除之以节约空间。Bitmap只能统计是非状态，不能统计次数。")]),s._v(" "),t("h3",{attrs:{id:"hyperloglog"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hyperloglog"}},[s._v("#")]),s._v(" HyperLogLog")]),s._v(" "),t("p",[s._v("该数据类型应用面更窄：统计不重复的数据的数量。")]),s._v(" "),t("p",[s._v("前面我们看过这样的一个场景：统计网站的独立用户访问量，当时使用的是set来存储每个用户的id（字符串）实现统计，学过Bitmap之后可以用bit来存储每个用户的状态是否访问，这样能带来一定的提升，但当用户量非常大时占用空间也很可观。")]),s._v(" "),t("ul",[t("li",[s._v("HyperLogLog是用来进行基数统计的，基数就是数据集去重后的元素个数，它不是集合不保存数据，只记录数量所以比set和bitmaps存储效率高（每个HyperLogLog key占用了12KB的内存用于标记基数）；")]),s._v(" "),t("li",[s._v("其核心是基数估算算法，最终值存在一定误差（当数据量达到一定量级后估计结果是一个带有0.81%误差的近似值）")])]),s._v(" "),t("p",[s._v("HyperLogLog类型的资本操作：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 添加数据\npfadd key element [element ...] //该操作不是一次分配12K内存，会随着基数增加逐渐增大\n# 统计数据\npfcount key [key ...]\n# 合并数据\npfmerge destkey sourcekey [sourcekey ...] //合并后占用的存储空间为12K，无论之前存储空间是多少\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"geo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#geo"}},[s._v("#")]),s._v(" GEO")]),s._v(" "),t("p",[s._v("GEO类型用于计算地理位置，并且只适用于经纬度，海拔无法计算。")]),s._v(" "),t("p",[s._v("GEO类型基本操作：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 添加坐标点经纬度\ngeoadd key longitude latitude member [longitude latitude member ...]\n# 获取坐标点\ngeopos key member [member ...]\n#计算坐标距离\ngeodist key member1 member2 [m|km|ft|mi 单位默认为m]\n\n# 根据输入的经纬度坐标和半径求范围内有多少个点（移动导航场景）\ngeoradius key longitude latitude radius m|km|ft|mi [withcoord] [withdist] [withhash] [count count]\n# 根据已有的点求半径范围内有多少点（定外卖预先填好位置）\ngeoradiusbymember key member radius m|km|ft|mi [withcoord] [withdist] [withhash] [count count]\n# 获取指定点对应的坐标hash值\ngeohash key member [member ...]\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("h1",{attrs:{id:"redis集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis集群"}},[s._v("#")]),s._v(" Redis集群")]),s._v(" "),t("p",[s._v("互联网服务要求“高并发”、“高性能”、“高可用”，高可用业界可用性目标为5个9，即全年服务可用时长达到99.999%。而单机的Redis存在以下风险与问题：")]),s._v(" "),t("ul",[t("li",[s._v("机器故障，例如硬盘故障、系统崩溃，可能造成数据丢失对业务造成灾难性打击。")]),s._v(" "),t("li",[s._v("容量瓶颈，内存不足，由于成本和硬件限制不可能无限升级内存")])]),s._v(" "),t("p",[s._v("为了避免单点Redis服务器故障，准备多台服务器，互相连通。将数据复制多个副本保存在不同的服务器上，并保证数据是同步的。这就实现了Redis的高可用与数据的冗余备份。")]),s._v(" "),t("h2",{attrs:{id:"主从复制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主从复制"}},[s._v("#")]),s._v(" 主从复制")]),s._v(" "),t("p",[s._v("我们使用一台主服务器（master）专门负责收集数据（写），并使多台从服务器（slave）与主服务器同步数据，专门负责提供数据（读）。这时的核心工作就是数据从master到slave的复制过程。")]),s._v(" "),t("p",[s._v("主从复制就是将master中的数据即时、有效的复制到slave中，一个master有多个slave，一个slave只有一个master。其作用在于：")]),s._v(" "),t("ul",[t("li",[s._v("读写分离：提高服务器的读写负载能力")]),s._v(" "),t("li",[s._v("负载均衡：基于主从结构配合读写分离，由slave分担master的负载，并根据需求变化改变slave的数量，提高服务器的并发量与数据吞吐量。")]),s._v(" "),t("li",[s._v("故障恢复：当master出现问题，由slave提供服务，实现快速故障恢复。")]),s._v(" "),t("li",[s._v("数据冗余：实现数据的热备份，是持久化之外的一种数据冗余方式。")]),s._v(" "),t("li",[s._v("高可用基石：基于主从复制，构建哨兵模式与集群，实现Redis高可用方案。")])]),s._v(" "),t("p",[s._v("主从复制过程大体可以分为3个阶段：")]),s._v(" "),t("ul",[t("li",[s._v("建立连接阶段（准备阶段）")]),s._v(" "),t("li",[s._v("数据同步阶段")]),s._v(" "),t("li",[s._v("命令传播阶段")])]),s._v(" "),t("h3",{attrs:{id:"工作流程-建立连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作流程-建立连接"}},[s._v("#")]),s._v(" 工作流程：建立连接")]),s._v(" "),t("ol",[t("li",[s._v("首先通过slave客户端向slave服务端发送指令"),t("code",[s._v("slaveof ip port")]),s._v("，slave服务端会向master服务端发送连接消息。master服务端接收到指令，响应对方。slave服务端保存master的IP与端口。")]),s._v(" "),t("li",[s._v("slave根据保存的信息创建连接master的socket。")]),s._v(" "),t("li",[s._v("slave还要周期性地发送命令ping，master响应pong")]),s._v(" "),t("li",[s._v("slave可能要发送指令auth password，master做一个验证授权")]),s._v(" "),t("li",[s._v("slave通过replconf listening-port port-number来告知master自己的监听端口，master保存slave的端口号。")])]),s._v(" "),t("p",[s._v("至此主从连接成功，之间创建了连接的socket。")]),s._v(" "),t("p",[s._v("为了建立连接，可以在slave客户端使用指令"),t("code",[s._v("slaveof ip port")]),s._v("，也可以在slave服务器启动时用命令行参数传入"),t("code",[s._v("redis-server ./conf/redis-6380.conf --slaveof 127.0.0.1 6379")]),s._v("，但不推荐这两种方式，我们应该使用配置文件进行配置，直接添加"),t("code",[s._v("slaveof 127.0.0.1 6379")]),s._v("。")]),s._v(" "),t("p",[s._v("要断开连接的话，必然是从服务器断开，通过指令"),t("code",[s._v("slaveof no one")]),s._v("来断开。")]),s._v(" "),t("p",[s._v("授权访问相关的命令如下（即使不用主从模式配置密码后客户端连接也需要密码）：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# master配置文件设置密码\nrequirepass password\n# master客户端命令设置密码\nconfig set requirepass password\nconfig get requirepass\n# 启动客户端设置密码\nredis-cli -a password\n\n# slave客户端发送命令设置连接密码\nauth password\n# slave通过配置文件设置密码\nmasterauth password\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h3",{attrs:{id:"工作流程-数据同步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作流程-数据同步"}},[s._v("#")]),s._v(" 工作流程：数据同步")]),s._v(" "),t("ol",[t("li",[s._v("slave端请求同步数据（向master发送指令psync2）")]),s._v(" "),t("li",[s._v("master创建RDB同步数据（master执行bgsave，第一个slave连接时创建指令缓冲区，生成RDB文件）并通过socket发送给slave，这时RDB文件中不包含缓冲区中可能不断到来的指令。")]),s._v(" "),t("li",[s._v("slave接收RDB，清空数据，执行RDB文件恢复过程【到此为止是全量复制】slave发送命令告知RDB恢复已经完成")]),s._v(" "),t("li",[s._v("slave请求部分同步数据，master复制缓冲区的指令信息再发送")]),s._v(" "),t("li",[s._v("slave恢复部分同步数据，slave接受信息实行bgrewriteaof，恢复数据。【增量复制】")])]),s._v(" "),t("p",[s._v("说明：")]),s._v(" "),t("ol",[t("li",[s._v("如果master数据量巨大，数据同步阶段应该避开流量高峰期，避免造成master阻塞，影响业务正常执行。")]),s._v(" "),t("li",[s._v("master复制缓冲区大小设定不合理会导致数据溢出。可以通过"),t("code",[s._v("repl-backlog-size")]),s._v("进行配置。")]),s._v(" "),t("li",[s._v("为避免slave进行全量复制、部分复制时相应阻塞或者数据不同步，建议关闭此期间的对外查询服务。"),t("code",[s._v("slave-serve-stable-data yes|no")])]),s._v(" "),t("li",[s._v("当有多个slave对master请求数据同步是，master发送的RDB文件增多，会对带宽造成巨大冲击。因此要根绝需求适当错峰。")]),s._v(" "),t("li",[s._v("slave过多是，建议调整拓扑结构，由一主多从变为树状结构，中间结点既是master也是slave。这种方式能缓解master压力，但深度越高的slave与顶层master之间数据同步延迟越大，数据一致性变差应谨慎选择。")])]),s._v(" "),t("h3",{attrs:{id:"工作流程-命令传播"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作流程-命令传播"}},[s._v("#")]),s._v(" 工作流程：命令传播")]),s._v(" "),t("p",[s._v("在命令传播阶段如果出现了断网现象，闪断闪连可以忽略，短时间断网需要进行部分复制，长时间断网需要进行全量复制。")]),s._v(" "),t("p",[s._v("部分复制有三个核心要素：")]),s._v(" "),t("ul",[t("li",[s._v("服务器的运行id（run id）")]),s._v(" "),t("li",[s._v("主服务器的复制积压缓冲区")]),s._v(" "),t("li",[s._v("主从服务器的复制偏移量")])]),s._v(" "),t("p",[s._v("服务器的运行id是40位16进制字符，每台服务器每次运行都会生成一个不同的运行id。被用在服务器间进行传输，识别身份。")]),s._v(" "),t("p",[s._v("复制积压缓冲区由偏移量和字节值组成，存储的是AOF格式的指令，通过offset区分不同的slave当前数据传播的差异，master和slave分别记录已发送信息和已接受信息的offset。")]),s._v(" "),t("p",[s._v("在数据同步过程中，详细传播的命令如下：")]),s._v(" "),t("ol",[t("li",[s._v("slave首次请求数据同步，发送"),t("code",[s._v("psync2 <runid> <offset>")]),s._v(" 指令，由于此时master的runid和offset未知，所以发送"),t("code",[s._v("psync2 ? -1")]),s._v("；master收到指令后发现需要全量复制，则发送"),t("code",[s._v("+FULLSYNC runid offset")]),s._v(",通过socket发送RDB文件给slave。这期间由于master接收客户端命令，offset发声了变化。slave收到"),t("code",[s._v("+FULLSYNC")]),s._v("和master的runid和offset进行保存，并通过RDB文件恢复数据。")]),s._v(" "),t("li",[s._v("之后slave向master发送"),t("code",[s._v("psync2 runid offset")]),s._v("，master接收命令，判定runid和自身是否匹配、offset是否在缓冲区中，如果有一个不满足则要进行全量复制；如果runid匹配、offset和master记录的相同则忽略；如果offset在缓冲区中但不相同则发送"),t("code",[s._v("+CONTINUE offset")]),s._v("，通过socket发送两边offset之间的数据。slave收到"),t("code",[s._v("+CONTINUE")]),s._v("指令后保存master的offset，接收信息并执行bgrewriteaof，恢复数据。完成后不断通过"),t("code",[s._v("replconf ack offset")]),s._v("向master报告自己当前的偏移量。")])]),s._v(" "),t("h3",{attrs:{id:"心跳机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#心跳机制"}},[s._v("#")]),s._v(" 心跳机制")]),s._v(" "),t("p",[s._v("进入命令传播阶段时，master与slave间要进行信息交换，使用心跳机制进行维护，保持双方连接在线。")]),s._v(" "),t("ul",[t("li",[s._v("master：指令为PING，用于判断slave是否在线，周期由"),t("code",[s._v("repl-ping-slave-period")]),s._v("决定，默认为10秒。")]),s._v(" "),t("li",[s._v("slave：指令为REPLCONF ACK {offset}，周期为1秒，用于判断master是否在线，并向master汇报自己的复制偏移量，获取最新的数据变更指令。")])]),s._v(" "),t("p",[s._v("当slave多数掉线，或延迟过高时，master为报障数据稳定性，将拒绝所有信息同步操作。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 当slave数量少于2个或者所有slave的延迟都大于等于10s时，强制关闭master的写功能，停止数据同步\nmin-slaves-to-write 2\nmin-slaves-max-lag 10\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"主从复制的常见问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主从复制的常见问题"}},[s._v("#")]),s._v(" 主从复制的常见问题")]),s._v(" "),t("ul",[t("li",[s._v("频繁的全量复制\n"),t("ul",[t("li",[s._v("伴随系统运行，master数据量增大，一旦master重启，runid将发生变化，会导致全部slave的全量复制操作。Redis内部有优化调整方案，关闭时执行命令 shutdown save，将runid和offset保存到RDB文件中，重启后加载RDB即可恢复runid和offset。")]),s._v(" "),t("li",[s._v("master缓冲区过小，同时网络环境不佳，断网重连后offset越界，触发全量复制，导致slave拒绝对外提供服务。修改缓冲区大小即可解决，大小设置为"),t("code",[s._v("2*重连平均时长*master平均每秒产生写命令数据总量")])])])]),s._v(" "),t("li",[s._v("频繁的网络中断\n"),t("ul",[t("li",[s._v("slave频繁断开连接重连，导致master各种资源被严重占用。可以设置合理的超时时间"),t("code",[s._v("repl-timeout")]),s._v("确认是否释放slave（默认为60s）。")]),s._v(" "),t("li",[s._v("slave连接断开，由于master设定的超时时间较短，而ping指令在网络中存在丢包。这时要提高ping指令发送的频度"),t("code",[s._v("repl-ping-slave-period")]),s._v("，超时时间"),t("code",[s._v("repl-time")]),s._v("应至少为频度的5到10倍否则容易判定slave超时。")])])]),s._v(" "),t("li",[s._v("多个slave获取相同的数据不同步\n"),t("ul",[t("li",[s._v("优化主从间的网络环境")])])])]),s._v(" "),t("h2",{attrs:{id:"哨兵"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#哨兵"}},[s._v("#")]),s._v(" 哨兵")]),s._v(" "),t("p",[s._v("如果Redis集群在运行过程中一台slave宕机，那么master可以通过心跳机制以及配置的超时策略来选择释放掉该slave，但是如果master宕机了我们要做的事情就没有这么简单：")]),s._v(" "),t("ul",[t("li",[s._v("将宕机的master下线")]),s._v(" "),t("li",[s._v("找一个slave作为新的master")]),s._v(" "),t("li",[s._v("通知所有slave连接新的master")]),s._v(" "),t("li",[s._v("启动新的master与slave")]),s._v(" "),t("li",[s._v("某些情况下可能会做N次全量复制和N次部分复制")])]),s._v(" "),t("p",[s._v("那么就会产生这样的问题：")]),s._v(" "),t("ul",[t("li",[s._v("谁来确认master宕机了")]),s._v(" "),t("li",[s._v("如何确定新的master")]),s._v(" "),t("li",[s._v("修改主从配置后，原来的master恢复了怎么办？")])]),s._v(" "),t("p",[s._v("哨兵（sentinel）就是负责监控主从结构中的每台服务器，并解决以上问题的一个分布式系统。起作用在于：")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("监控")]),s._v("master和slave是否正常运行")]),s._v(" "),t("li",[t("strong",[s._v("通知")]),s._v("，当被监控的服务器出现问题时，向其它（哨兵、客户端）发送通知")]),s._v(" "),t("li",[t("strong",[s._v("自动故障转移")]),s._v("，断开master与slave连接，选取一个slave作为新的master，将其它slave连接到新的master，并告知客户端新的服务器地址")])]),s._v(" "),t("p",[s._v("哨兵也是一台Redis服务器，只是不提供数据服务，通常哨兵配置数量为单数。在Redis根目录下提供了一份默认的配置，我们可以通过"),t("code",[s._v('cat sentinel.conf|grep -v "#"|grep -v "^$" > ./conf/sentinel-26379.conf')]),s._v("来将其中的主要内容写入到新的配置文件中并进行自定义（主要是配置哨兵端口和目录）。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("port 26379\ndir /root/redis-6.0.6/data\nsentinel monitor mymaster 127.0.0.1 6379 2\nsentinel down-after-milliseconds mymaster 30000\nsentinel parallel-syncs mymaster 1\nsentinel failover-timeout mymaster 180000\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("快速拷贝并修改两份配置：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/26379/26380/g'")]),s._v(" sentienl-26379.conf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" sentienl-26380.conf\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/26379/26381/g'")]),s._v(" sentienl-26379.conf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" sentienl-26381.conf\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("启动master和两个slave，之后使用"),t("code",[s._v("redis-sentinel 配置文件路径")]),s._v("来启动哨兵，这时我们再查看配置文件可以发现已经自动生成了一些信息。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('port 26379\ndir "/root/redis-6.0.6/data"\nsentinel myid 4b06697560c18dd5f688d61f144b4959ac570136\nsentinel deny-scripts-reconfig yes\nsentinel monitor mymaster 127.0.0.1 6379 2\nsentinel config-epoch mymaster 0\n# Generated by CONFIG REWRITE\nprotected-mode no\nuser default on nopass ~* +@all\nsentinel leader-epoch mymaster 0\nsentinel known-replica mymaster 127.0.0.1 6381\nsentinel known-replica mymaster 127.0.0.1 6380\nsentinel known-sentinel mymaster 127.0.0.1 26380 26a351452fe45246fd1557b95a215f2ed001ba00\nsentinel current-epoch 0\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("包括当前哨兵的id和已知的主从服务器以及已知的其它哨兵，当我们手动Ctrl C关闭master之后，稍等片刻就能在各哨兵的控制台日志中看到sdown和重新选举新master的相关信息，并且在剩下的两台slave日志中也能看到它们首先是尝试重连旧的master，然后进行了config rewrite，其中被选为master的服务器切换到了master mode。")]),s._v(" "),t("h3",{attrs:{id:"哨兵工作原理-监控阶段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#哨兵工作原理-监控阶段"}},[s._v("#")]),s._v(" 哨兵工作原理：监控阶段")]),s._v(" "),t("p",[s._v("同步各个节点的状态信息，获取各个sentinel的状态和master的状态（runid、role和各个slave的详细信息），从master那里拿到slave的信息后再连接slave获取slave的状态（runid、role、host、port、offset等等）。")]),s._v(" "),t("p",[s._v("工作顺序：")]),s._v(" "),t("ol",[t("li",[s._v("sentinel连接master发送info获得详细信息，为了方便后面的命令交换，与master建立cmd连接。")]),s._v(" "),t("li",[s._v("sentinel和master中的info维护了已知的所有master、slaves、sentinels。")]),s._v(" "),t("li",[s._v("sentinel根据拿到的信息，连接slave发送info获得详细信息。")]),s._v(" "),t("li",[s._v("当有新的sentinel启动并从master那里拿到信息后，发现sentinels中有其它sentinel，则他们之间建立publish/subscribe连接保证信息的同步，新的sentinel也会连接所有slave。")])]),s._v(" "),t("h3",{attrs:{id:"哨兵工作原理-通知阶段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#哨兵工作原理-通知阶段"}},[s._v("#")]),s._v(" 哨兵工作原理：通知阶段")]),s._v(" "),t("p",[s._v("通知阶段是信息的长期维护阶段，任意的sentinel都会通过cmd连接获取到master和slave的工作状态，之后它会在sentinel之间传递这些信息。")]),s._v(" "),t("h3",{attrs:{id:"哨兵工作原理-故障转移阶段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#哨兵工作原理-故障转移阶段"}},[s._v("#")]),s._v(" 哨兵工作原理：故障转移阶段")]),s._v(" "),t("p",[s._v("当一个sentinel发现向master发送hello消息得不到回应超过一定次数时，他就认为master宕机了，认为master状态为sdown（主观下线）并通知其它sentinel，当超过半数的sentinel都认为master宕机则状态变为odown（客观下线），该数字由配置中"),t("code",[s._v("sentinel monitor mymaster 127.0.0.1 6379 2")]),s._v("最后一个值确定。")]),s._v(" "),t("p",[s._v("之后sentinel之间要发起多轮领导者选举，每次发送自己的竞选次数和runid以及挂掉的masterIP和端口，如果一轮选举后没有sentinel得到半数以上投票，则进行下一轮，竞选次数+1。")]),s._v(" "),t("p",[s._v("选出的sentinel从服务器列表中挑选备选的master：")]),s._v(" "),t("ul",[t("li",[s._v("选中所有在线的")]),s._v(" "),t("li",[s._v("排除掉响应慢的")]),s._v(" "),t("li",[s._v("排除与原master断开时间久的")]),s._v(" "),t("li",[s._v("最后使用优先原则\n"),t("ul",[t("li",[s._v("优先级")]),s._v(" "),t("li",[s._v("offset")]),s._v(" "),t("li",[s._v("runid")])])])]),s._v(" "),t("p",[s._v("选出新的master后，向新的master发送slaveof no one，向其它slave发送slaveof 新masterIP与端口。之后就算原master重连，也将被转为slave。")]),s._v(" "),t("h2",{attrs:{id:"集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集群"}},[s._v("#")]),s._v(" 集群")]),s._v(" "),t("p",[s._v("在业务发展中，随着业务量增大单台主服务器会遇到性能峰值瓶颈。集群就是使用网络将若干台计算机联通起来，并提供统一的管理方式，使其对外呈现单机的服务效果。集群的好处在于：")]),s._v(" "),t("ul",[t("li",[s._v("分散单台服务器的访问压力，实现负载均衡")]),s._v(" "),t("li",[s._v("分散单台服务器的存储压力，实现可扩展性")]),s._v(" "),t("li",[s._v("降低单台服务器宕机带来的业务灾难")])]),s._v(" "),t("h3",{attrs:{id:"集群存储结构设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集群存储结构设计"}},[s._v("#")]),s._v(" 集群存储结构设计")]),s._v(" "),t("p",[s._v("在前面的主从模式中，一个主服务器要负责所有数据的写入工作，而在集群中多个主服务器共同承担数据的写入。这些主服务器的所有存储空间被划分为16384份（每一份被称为槽）并编好号，当有一个key-value要存入时，首先通过CRC16算法得到一个hash值，该值再对16384取模来确定最终要存储的位置。")]),s._v(" "),t("p",[s._v("当新加入机器时，从原有的机器中取出一部分槽分给新机器。各个数据库相互通信，保存各个库中槽的编号数据，当有客户端请求数据时，如果一次命中直接返回，没有命中则告知其具体的存储位置。")]),s._v(" "),t("h3",{attrs:{id:"搭建集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搭建集群"}},[s._v("#")]),s._v(" 搭建集群")]),s._v(" "),t("p",[s._v("依然来编辑配置文件，追加上：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("cluster-enabled yes //开启集群模式\nclutser-config-file node-6379.conf //集群配置文件\ncluster-node-timeout 10000 //cluster下线的时间，一旦节点超时达到限制则认为已经下线\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("依次修改多个实例的配置并启动它们，这时我们查看进程能看到后面多了[cluster]标记")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("➜  conf "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -ef "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" redis-\nroot      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3950")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3516")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":11 pts/4    00:00:00 redis-server *:6379 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("cluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nroot      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3980")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3567")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":11 pts/5    00:00:00 redis-server *:6380 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("cluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nroot      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3993")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3618")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":12 pts/6    00:00:00 redis-server *:6381 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("cluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nroot      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4006")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3675")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":12 pts/7    00:00:00 redis-server *:6382 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("cluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nroot      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4019")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3728")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":12 pts/8    00:00:00 redis-server *:6383 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("cluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nroot      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4049")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3779")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":13 pts/9    00:00:00 redis-server *:6384 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("cluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nroot      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4056")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2398")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":13 pts/0    00:00:00 "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" --color"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("auto --exclude-dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(".bzr --exclude-dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("CVS --exclude-dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(".git --exclude-dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(".hg --exclude-dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(".svn --exclude-dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(".idea --exclude-dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(".tox redis-\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("接下来进入到src目录，使用该目录下的redis-trib.rb来构建cluster集群：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --replicas 后面的数字表示个主带几个从，后面的主机数量要对应起来，先输入所有的主再输入所有的从")]),s._v("\n➜  src ./redis-trib.rb create --replicas "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6380 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6381 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6382 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6383 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6384\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("Redis 6.0 中已经停止使用redis-trib.rb，全部相关的指令已经转移到redis-cli")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("redis-cli --cluster create 127.0.0.1:6379 127.0.0.1:6380 127.0.0.1:6381 127.0.0.1:6382 127.0.0.1:6383 127.0.0.1:6384 --cluster-replicas 1\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("输入yes回车后配置集群完毕，自动将16384个槽均分给了三个master，并且每个master和自己的slave建立了同步。这时我们看到./conf/node-63**.conf中已经更新了所有节点已知的其它节点信息。")]),s._v(" "),t("h3",{attrs:{id:"集群中写入与获取数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集群中写入与获取数据"}},[s._v("#")]),s._v(" 集群中写入与获取数据")]),s._v(" "),t("p",[s._v("集群跑起来后，我们要连接6379这台主服务器并尝试写入数据：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("➜  ~ redis-cli        \n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" name wallace\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" MOVED "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5798")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6380\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("可以发现不允许在6379这台服务器上写入，由name这一个key计算出来的槽应该在6380上。为了避免频繁切换连接不同端口的客户端，可以通过"),t("code",[s._v("redis-cli -c")]),s._v("进入集群模式：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("➜  ~ redis-cli -c\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" name wallace\n-"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Redirected to slot "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5798")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" located at "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6380\nOK\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" get name\n-"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Redirected to slot "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5798")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" located at "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6380\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"wallace"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"主从下线与主从切换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主从下线与主从切换"}},[s._v("#")]),s._v(" 主从下线与主从切换")]),s._v(" "),t("p",[s._v("当某个slave下线达到前面配置的timeout时长后，master就会将其标记为下线，该信息会在所有在线节点间同步；该slave再次上线后，其被标记的下线状态会被清除。少量slave下线不会对集群的运行产生重大影响。")]),s._v(" "),t("p",[s._v("当某个master下线后，其slave尝试每1s连接一次master，当达到超时时间后仍为连接成功则选举出新的master并将原来的master标记为"),t("code",[s._v("master,fail")]),s._v("；原master再次上线后与新master进行同步，状态变为slave。（可以在客户端内使用"),t("code",[s._v("cluster nodes")]),s._v("或直接查看配置文件node-63**.conf查看）")]),s._v(" "),t("p",[s._v("cluster节点的操作命令：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 查看集群节点信息\ncluster nodes\n# 进入一个从节点，切换其主节点\ncluster replicate <master-id>\n# 发现一个新节点，新增主节点\ncluster meet ip:port\n# 忽略一个没有slot的节点\ncluster forget <id>\n# 手动故障转移\ncluster failover\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h1",{attrs:{id:"企业级解决方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#企业级解决方案"}},[s._v("#")]),s._v(" 企业级解决方案")]),s._v(" "),t("h2",{attrs:{id:"缓存预热"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存预热"}},[s._v("#")]),s._v(" 缓存预热")]),s._v(" "),t("p",[s._v("有时Redis服务器启动后很快发生宕机，可能是因为请求数量高、主从之间数据吞吐量较大、数据同步操作频度较高。有以下解决方案：")]),s._v(" "),t("ul",[t("li",[s._v("前置准备工作\n"),t("ul",[t("li",[s._v("日常例行统计数据访问记录，统计访问频度高的热点数据")]),s._v(" "),t("li",[s._v("利用LRU数据删除策略，构建数据留存队列（手工维护或结合storm与kafka）")])])]),s._v(" "),t("li",[s._v("准备工作\n"),t("ul",[t("li",[s._v("将统计结果中的数据分类，根据级别，redis优先加载级别高的热点数据")]),s._v(" "),t("li",[s._v("利用分布式多服务器同时进行数据读取，提速数据加载过程")])])]),s._v(" "),t("li",[s._v("实施\n"),t("ul",[t("li",[s._v("使用脚本程序固定触发数据预热过程")]),s._v(" "),t("li",[s._v("如果条件允许使用CDN效果会更好")])])])]),s._v(" "),t("p",[s._v("缓存预热就是在系统启动前，提前将相关的缓存数据加载到缓存系统。避免用户请求时，先查询数据库再将数据缓存的问题。")]),s._v(" "),t("h2",{attrs:{id:"缓存雪崩"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存雪崩"}},[s._v("#")]),s._v(" 缓存雪崩")]),s._v(" "),t("p",[s._v("问题现象：系统平稳运行中，忽然数据库连接量激增->应用服务器无法及时处理请求导致大量408、500错误->客户反复刷新页面获取数据->数据库崩溃->应用服务器崩溃，重启无效->Redis服务器崩溃->Redis集群崩溃->重启数据库后再次被瞬间流量放倒。")]),s._v(" "),t("p",[s._v("其背后的原因在于"),t("strong",[s._v("在一个较短的时间内缓存中较多的key集中过期")]),s._v("，此周期内请求访问过期的数据，redis未命中就只能向数据库获取数据，而数据库无法及时处理大量请求，导致Redis这边大量请求被积压，二者都面临崩溃。重启后仍然面对缓存中无数据可以用的问题，重启效果不理想。")]),s._v(" "),t("p",[s._v("可能的解决方案（设计层面）：")]),s._v(" "),t("ul",[t("li",[s._v("更多的页面静态化处理，减少向缓存请求的数据量")]),s._v(" "),t("li",[s._v("构建多级缓存架构：Nginx缓存+redis缓存+ehcache缓存")]),s._v(" "),t("li",[s._v("检测MySQL严重耗时的业务进行优化，例如超时查询、检测耗时较高事务等")]),s._v(" "),t("li",[s._v("灾难预警机制，监控redis服务器性能指标\n"),t("ul",[t("li",[s._v("CPU占用、使用率")]),s._v(" "),t("li",[s._v("内存容量")]),s._v(" "),t("li",[s._v("查询平均响应时间")]),s._v(" "),t("li",[s._v("线程数")])])]),s._v(" "),t("li",[s._v("限流、降级：短期内牺牲部分用户体验，限制部分访问，降低服务器压力。")])]),s._v(" "),t("p",[s._v("具体来说，还可以：")]),s._v(" "),t("ul",[t("li",[s._v("切换LRU、LFU策略")]),s._v(" "),t("li",[s._v("数据有效期策略调整\n"),t("ul",[t("li",[s._v("在业务层面对数据进行分类错峰，例如电商抢购分场进行")]),s._v(" "),t("li",[s._v("过期时间使用固定时间+随机值的形式，稀释集中到期的key的数量")])])]),s._v(" "),t("li",[s._v("对于超热数据使用永久key")]),s._v(" "),t("li",[s._v("定期维护：自动和人工，对即将过期的数据做访问量分析，确认是否延时。")]),s._v(" "),t("li",[s._v("（慎用）加锁")])]),s._v(" "),t("h2",{attrs:{id:"缓存击穿"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存击穿"}},[s._v("#")]),s._v(" 缓存击穿")]),s._v(" "),t("p",[s._v("问题现象：系统平稳运行中，数据库连接量瞬间激增，而Redis服务器无大量key过期、内存无波动、CPU正常，但是数据库崩溃了。")]),s._v(" "),t("p",[s._v("问题原因：Redis某个key过期了，该key访问量巨大。多个请求都未命中，Redis在短时间内发起了大量对数据库中同一数据的访问。")]),s._v(" "),t("p",[s._v("解决方案：")]),s._v(" "),t("ul",[t("li",[s._v("预先设定：指定若干热点数据（例如购物节主打商品），加大此类信息key的过期时长。")]),s._v(" "),t("li",[s._v("现场调整：监控访问量，对自然流量激增的数据延长过期时间或设置为永久key。")]),s._v(" "),t("li",[s._v("后台刷新数据：启动定时任务，在高峰期来临前，刷新数据有效期")]),s._v(" "),t("li",[s._v("二级缓存：设置不同的失效时间，保障数据不会同时被淘汰。")]),s._v(" "),t("li",[s._v("加分布式锁：防止被击穿，不过也是性能瓶颈，慎重使用。")])]),s._v(" "),t("p",[s._v("缓存击穿的应对方案应该在业务数据分析和预防方面进行，配合运行监控调试与及时调整策略。单个key过期监控难度较高，配合雪崩处理策略即可。")]),s._v(" "),t("h2",{attrs:{id:"缓存穿透"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存穿透"}},[s._v("#")]),s._v(" 缓存穿透")]),s._v(" "),t("p",[s._v("问题现象：系统平稳运行中，应用服务器流量随时间增量较大，Redis服务器命中率随时间逐步降低、内存平稳无压力，但Redis服务器CPU占用激增，数据库服务器压力激增甚至可能崩溃。排查发现出现了非正常的URL访问。")]),s._v(" "),t("p",[s._v("问题原因：非正常的URL访问的数据在Redis和数据库中都不存在，查询为null后Redis并不会持久化，导致反复访问数据库。可能出现了黑客攻击。")]),s._v(" "),t("p",[s._v("解决方案：")]),s._v(" "),t("ul",[t("li",[s._v("临时缓存查询结果为null的数据，长期使用定期清理（30~60s，最高5min）。但这种方法治标不治本，也可能没有足够的内存缓存大量不存在的数据。")]),s._v(" "),t("li",[s._v("白名单策略：\n"),t("ul",[t("li",[s._v("提前预热各种分类数据id对应的bitmaps，id作为bitmaps的offset，相当于设置了白名单。请求正常数据时放行，请求异常数据时拦截（相当于加了拦截器，效率偏低）")]),s._v(" "),t("li",[s._v("使用布隆过滤器（比bitmaps性能高一些）")])])]),s._v(" "),t("li",[s._v("实时监控redis命中率是否在业务正常范围内，波动超过一定范围使用黑名单进行防控。")]),s._v(" "),t("li",[s._v("对key加密：临时启用防灾业务key，对key进行业务层传输加密，使用校验程序校验过来的key。（例如每天随机分配60个加密串，挑选2~3个混淆到页面数据id中，发现过来的key不满足规则则驳回访问）")])]),s._v(" "),t("p",[s._v("无论是黑名单还是白名单对系统都是压力，问题结束后应尽快解除。")]),s._v(" "),t("h2",{attrs:{id:"性能监控"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#性能监控"}},[s._v("#")]),s._v(" 性能监控")]),s._v(" "),t("p",[s._v("要监控的部分重要指标如下：")]),s._v(" "),t("ul",[t("li",[s._v("性能指标\n"),t("ul",[t("li",[s._v("latency Redis响应一个请求的时间")]),s._v(" "),t("li",[s._v("instantaneous_ops_per_sec 平均每秒处理请求总数，即QPS")]),s._v(" "),t("li",[s._v("hit rate 缓存命中率")])])]),s._v(" "),t("li",[s._v("内存指标\n"),t("ul",[t("li",[s._v("used_memory 已使用内存")]),s._v(" "),t("li",[s._v("mem_fragmentation_ratio 内存碎片率")]),s._v(" "),t("li",[s._v("evicted_keys 由于最大内存限制而被逐出的key的数量")]),s._v(" "),t("li",[s._v("blocked_clients 由于BLPOP、BRPOP等操作而被阻塞的客户端数量")])])]),s._v(" "),t("li",[s._v("基本活动指标\n"),t("ul",[t("li",[s._v("connected_clients 客户端连接数")]),s._v(" "),t("li",[s._v("connected_slaves slave数量")]),s._v(" "),t("li",[s._v("master_last_io_seconds_ago 最近一次主从交互之后的秒数")]),s._v(" "),t("li",[s._v("keyspace 数据库中key值总数")])])]),s._v(" "),t("li",[s._v("持久化指标\n"),t("ul",[t("li",[s._v("rdb_last_save_time 最后一次持久化的时间戳")]),s._v(" "),t("li",[s._v("rdb_changes_since_last_save 最后一次持久化以来数据库的更改数")])])]),s._v(" "),t("li",[s._v("错误指标\n"),t("ul",[t("li",[s._v("rejected_connections 由于达到maxclients限制而被拒绝的连接数")]),s._v(" "),t("li",[s._v("keyspace_misses key没有命中的次数")]),s._v(" "),t("li",[s._v("master_link_down_since_seconds 主从断开的持续时间")])])])]),s._v(" "),t("p",[s._v("监控方式：")]),s._v(" "),t("ul",[t("li",[s._v("工具\n"),t("ul",[t("li",[s._v("Cloud Insight Redis")]),s._v(" "),t("li",[s._v("Prometheus")]),s._v(" "),t("li",[s._v("Redis-stat")]),s._v(" "),t("li",[s._v("Redis-faina")]),s._v(" "),t("li",[s._v("RedisLive")]),s._v(" "),t("li",[s._v("zabbix")])])]),s._v(" "),t("li",[s._v("命令\n"),t("ul",[t("li",[s._v("redis-benchmark")]),s._v(" "),t("li",[s._v("redis-cli\n"),t("ul",[t("li",[s._v("monitor")]),s._v(" "),t("li",[s._v("slowlog get|len|reset")])])])])])]),s._v(" "),t("p",[s._v("使用自带的redis-benchmark来测试：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 不带参数默认创建50个连接，共10000次请求对应的性能\nredis-benchmark [-h] [-p] [-c <客户端连接数>] [-n <请求数>] [-k]\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);